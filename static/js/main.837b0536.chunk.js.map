{"version":3,"sources":["store/list.js","store/formState.js","store/formValidation.js","store/professions.js","PersonForm/PersonForm.jsx","AddPerson/AddPersonDialog.jsx","AddPerson/AddPersonBtn.jsx","StaffList/StaffListHeader.jsx","EditPerson/EditPersonDialog.jsx","EditPerson/EditPersonBtn.jsx","DeletePerson/DeletePersonDialog.jsx","DeletePerson/DeletePersonBtn.jsx","StaffList/StaffListControls.jsx","StaffList/StaffListCell.jsx","StaffList/StaffListRow.jsx","StaffList/StaffList.jsx","App.js","reportWebVitals.js","index.js"],"names":["keys","surname","name","patronymic","position","dateOfBirth","gender","dateOfHiring","dateOfFiring","isDriver","controls","list","1","2","3","4","5","makeAutoObservable","this","id","parseInt","Math","random","generatePersonId","person","setLocalStorage","storage","localStorage","getItem","JSON","parse","setItem","stringify","state","event","target","value","checked","isValid","validationRules","string","regExp","msg","stringGender","date","bool","fieldValidStatus","rule","required","customRule","olderThenDateOfHiring","formData","hired","Date","getTime","fired","isNaN","formdata","test","Object","forEach","key","entries","error","isFieldValid","professions","useStyles","makeStyles","form","width","inputGroup","display","justifyContent","marginBottom","textInput","formControl","observer","props","classes","positions","values","map","option","MenuItem","handleChangeText","formState","handleChangeTextInput","bind","handleChangeCheck","formValidation","surnameMsg","nameMsg","patronymicMsg","positionMsg","dateOfBirthMsg","genderMsg","dateOfHiringMsg","dateOfFiringMsg","className","TextField","onChange","InputLabelProps","shrink","Boolean","helperText","label","variant","select","type","FormControl","FormLabel","component","RadioGroup","row","aria-label","defaultValue","FormControlLabel","control","Radio","color","labelPlacement","FormHelperText","Checkbox","AddPerson","Dialog","maxWidth","open","onClose","handleClose","aria-labelledby","DialogTitle","title","DialogContent","DialogActions","Button","onClick","resetFieldValidStatus","validateForm","addPerson","resetForm","AddPersonBtn","React","useState","setOpen","Tooltip","IconButton","fontSize","tableHeader","backgroundColor","tableHeaderCell","fontWeight","StaffListHeader","headers","staffKeys","header","TableCell","TableHead","TableRow","EditPersonDialog","editPerson","EditPersonBtn","editState","DeletePersonDialog","deletePerson","DeletePersonBtn","flex","StaffListControls","StaffListCell","cellContent","columnHeader","cellValue","split","reverse","join","dataHandler","StaffListRow","staffList","tableContainer","margin","rows","TableContainer","Paper","Table","TableBody","getLocalStorage","container","textAlign","App","Container","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.837b0536.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\n\nclass List {\n  keys = {\n    surname: \"Фамилия\",\n    name: \"Имя\",\n    patronymic: \"Отчество\",\n    position: \"Должность\",\n    dateOfBirth: \"Дата рождения\",\n    gender: \"Пол\",\n    dateOfHiring: \"Дата приема на работу\",\n    dateOfFiring: \"Дата увольнения\",\n    isDriver: \"Наличие прав\",\n    controls: \"\",\n    // colleagues: \"Коллеги\",\n  };\n  list = {\n    1: {\n      surname: \"Иванов\",\n      name: \"Иван\",\n      patronymic: \"Иванович\",\n      position: \"Директор\",\n      dateOfBirth: \"1980-01-01\",\n      gender: \"Мужской\",\n      dateOfHiring: \"2010-01-01\",\n      dateOfFiring: \"\",\n      isDriver: true,\n      // colleagues: [1, 2, 4],\n    },\n    2: {\n      surname: \"Петров\",\n      name: \"Петр\",\n      patronymic: \"Петрович\",\n      position: \"Бухгалтер\",\n      dateOfBirth: \"1990-01-01\",\n      gender: \"Мужской\",\n      dateOfHiring: \"2012-01-01\",\n      dateOfFiring: \"\",\n      isDriver: true,\n      // colleagues: [1, 2, 4],\n    },\n    3: {\n      surname: \"Алексеева\",\n      name: \"Екатерина\",\n      patronymic: \"Владимировна\",\n      position: \"Секретарь\",\n      dateOfBirth: \"1999-01-01\",\n      gender: \"Женский\",\n      dateOfHiring: \"2010-02-01\",\n      dateOfFiring: \"\",\n      isDriver: true,\n      // colleagues: [1, 2, 4],\n    },\n    4: {\n      surname: \"Ульянов\",\n      name: \"Игорь\",\n      patronymic: \"Иванович\",\n      position: \"Дворник\",\n      dateOfBirth: \"1970-01-01\",\n      gender: \"Мужской\",\n      dateOfHiring: \"2013-01-01\",\n      dateOfFiring: \"2016-01-01\",\n      isDriver: false,\n      // colleagues: [1, 2, 4],\n    },\n    5: {\n      surname: \"Дмитриченко\",\n      name: \"Ольга\",\n      patronymic: \"Евгениевна\",\n      position: \"Уборщица\",\n      dateOfBirth: \"1978-01-01\",\n      gender: \"Женский\",\n      dateOfHiring: \"2020-01-01\",\n      dateOfFiring: \"\",\n      isDriver: false,\n      // colleagues: [1, 2, 4],\n    },\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  generatePersonId() {\n    const id = parseInt(Math.random() * 10000);\n    return this.list[id] ? this.generatePersonId() : id;\n  }\n\n  addPerson(person) {\n    const id = this.generatePersonId();\n    this.list[id] = { ...person };\n    this.setLocalStorage();\n  }\n\n  deletePerson(id) {\n    delete this.list[id];\n    this.setLocalStorage();\n  }\n\n  editPerson(id, person) {\n    this.list[id] = { ...person };\n    this.setLocalStorage();\n  }\n\n  getLocalStorage() {\n    const storage = localStorage.getItem(\"staffListTestWork\");\n    this.list = JSON.parse(storage);\n  }\n\n  setLocalStorage() {\n    localStorage.setItem(\"staffListTestWork\", JSON.stringify(this.list));\n  }\n}\n\nexport default new List();\n","import { makeAutoObservable } from \"mobx\";\n\nclass FormState {\n  state = {\n    surname: \"\",\n    name: \"\",\n    patronymic: \"\",\n    position: \"\",\n    dateOfBirth: \"\",\n    gender: \"\",\n    dateOfHiring: \"\",\n    dateOfFiring: \"\",\n    isDriver: false,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  handleChangeTextInput(event) {\n    this.state[event.target.name] = event.target.value;\n  }\n\n  handleChangeCheck(event) {\n    this.state[event.target.name] = event.target.checked;\n  }\n\n  resetForm() {\n    this.state = {\n      surname: \"\",\n      name: \"\",\n      patronymic: \"\",\n      position: \"\",\n      dateOfBirth: \"\",\n      gender: \"\",\n      dateOfHiring: \"\",\n      dateOfFiring: \"\",\n      isDriver: false,\n    };\n  }\n\n  editState(person) {\n    this.state = { ...person };\n  }\n}\n\nexport default new FormState();\n","import { makeAutoObservable } from \"mobx\";\n\nclass FormValidation {\n  isValid = true;\n\n  validationRules = {\n    string: {\n      regExp: /[0-9a-zA-Zа-яёА-ЯЁ]{3,}/,\n      msg: \"Поле обязательное, минимальная длина 3 символа\",\n    },\n    stringGender: {\n      regExp: /[0-9a-zA-Zа-яёА-ЯЁ]{3,}/,\n      msg: \"Поле обязательное\",\n    },\n    date: { regExp: /[0-9]{3,}/, msg: \"Поле обязательное\" },\n    bool: { regExp: /(true|false|1|0)/, msg: \"Не верный формат\" },\n  };\n\n  fieldValidStatus = {\n    surname: { rule: \"string\", required: true },\n    name: { rule: \"string\", required: true },\n    patronymic: { rule: \"string\", required: false },\n    position: { rule: \"string\", required: true },\n    dateOfBirth: { rule: \"date\", required: true },\n    gender: { rule: \"stringGender\", required: true },\n    dateOfHiring: { rule: \"date\", required: true },\n    dateOfFiring: {\n      rule: \"date\",\n      customRule: this.olderThenDateOfHiring,\n      required: false,\n    },\n    isDriver: { rule: \"bool\", required: false },\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  olderThenDateOfHiring(formData) {\n    const hired = new Date(formData.dateOfHiring).getTime();\n    const fired = new Date(formData.dateOfFiring).getTime();\n\n    if (isNaN(fired)) return;\n\n    return hired < fired ? \"\" : \"Не может быть меньше даты приема на работу\";\n  }\n\n  isFieldValid(formdata, required, value, rule, customRule) {\n    if (customRule) {\n      return customRule(formdata);\n    }\n    if (!value && !required) {\n      return \"\";\n    }\n    if (!required) {\n      return \"\";\n    }\n    return this.validationRules[rule].regExp.test(value)\n      ? \"\"\n      : this.validationRules[rule].msg;\n  }\n\n  resetFieldValidStatus() {\n    Object.keys(this.fieldValidStatus).forEach((key) => {\n      this.fieldValidStatus[key].msg = \"\";\n      this.isValid = true;\n    });\n  }\n\n  validateForm(formData) {\n    Object.entries(formData).forEach(([name, value]) => {\n      const { rule, required, customRule } = this.fieldValidStatus[name];\n      const error = this.isFieldValid(\n        formData,\n        required,\n        value,\n        rule,\n        customRule\n      );\n      if (error) {\n        this.isValid = false;\n      }\n      this.fieldValidStatus[name].msg = error;\n    });\n  }\n}\n\nexport default new FormValidation();\n","import { makeAutoObservable } from \"mobx\";\n\nclass Professions {\n  professions = {\n    1: \"Директор\",\n    2: \"Бухгалтер\",\n    3: \"Секретарь\",\n    4: \"Дворник\",\n    5: \"Уборщица\",\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n}\n\nexport default new Professions();\n","import professions from \"../store/professions\";\nimport formState from \"../store/formState\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { observer } from \"mobx-react-lite\";\nimport formValidation from \"../store/formValidation\";\n// import Select from \"@material-ui/core/Select\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n\nconst useStyles = makeStyles({\n  form: {\n    width: 800,\n  },\n  inputGroup: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 15,\n  },\n  textInput: {\n    width: \"47%\",\n  },\n  formControl: {\n    width: \"47%\",\n  },\n});\n\nexport default observer(function PersonForm(props) {\n  const classes = useStyles();\n\n  const positions = Object.values(professions.professions).map((option) => (\n    <MenuItem key={option} value={option}>\n      {option}\n    </MenuItem>\n  ));\n\n  // const colleagues = props.getColleaguesList().map((name) => (\n  //   <option key={name} value={name}>\n  //     {name}\n  //   </option>\n  // ));\n\n  const handleChangeText = formState.handleChangeTextInput.bind(formState);\n  const handleChangeCheck = formState.handleChangeCheck.bind(formState);\n\n  const {\n    surname: { msg: surnameMsg },\n    name: { msg: nameMsg },\n    patronymic: { msg: patronymicMsg },\n    position: { msg: positionMsg },\n    dateOfBirth: { msg: dateOfBirthMsg },\n    gender: { msg: genderMsg },\n    dateOfHiring: { msg: dateOfHiringMsg },\n    dateOfFiring: { msg: dateOfFiringMsg },\n  } = formValidation.fieldValidStatus;\n\n  return (\n    <form className={classes.form}>\n      <div className={classes.inputGroup}>\n        <TextField\n          className={classes.textInput}\n          onChange={handleChangeText}\n          InputLabelProps={{ shrink: true }}\n          value={formState.state.surname}\n          required\n          error={Boolean(surnameMsg)}\n          helperText={surnameMsg}\n          id=\"surnamePersonForm\"\n          name=\"surname\"\n          label=\"Фамилия\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.textInput}\n          onChange={handleChangeText}\n          InputLabelProps={{ shrink: true }}\n          value={formState.state.name}\n          required\n          error={Boolean(nameMsg)}\n          helperText={nameMsg}\n          id=\"namePersonForm\"\n          name=\"name\"\n          label=\"Имя\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div className={classes.inputGroup}>\n        <TextField\n          className={classes.textInput}\n          onChange={handleChangeText}\n          InputLabelProps={{ shrink: true }}\n          value={formState.state.patronymic}\n          error={Boolean(patronymicMsg)}\n          helperText={patronymicMsg}\n          id=\"patronymicPersonForm\"\n          name=\"patronymic\"\n          label=\"Отчество\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.textInput}\n          required\n          select\n          value={formState.state.position}\n          error={Boolean(positionMsg)}\n          helperText={positionMsg}\n          InputLabelProps={{ shrink: true }}\n          onChange={handleChangeText}\n          id=\"positionPersonForm\"\n          name=\"position\"\n          label=\"Должность\"\n          variant=\"outlined\"\n        >\n          {positions}\n        </TextField>\n      </div>\n      <div className={classes.inputGroup}>\n        <TextField\n          className={classes.textInput}\n          value={formState.state.dateOfBirth}\n          error={Boolean(dateOfBirthMsg)}\n          helperText={dateOfBirthMsg}\n          InputLabelProps={{ shrink: true }}\n          onChange={handleChangeText}\n          required\n          id=\"dateOfBirthPersonForm\"\n          name=\"dateOfBirth\"\n          label=\"Дата рождения\"\n          type=\"date\"\n          variant=\"outlined\"\n        />\n        <FormControl className={classes.formControl} error={Boolean(genderMsg)}>\n          <FormLabel component=\"legend\" required>\n            Пол\n          </FormLabel>\n          <RadioGroup\n            row\n            id=\"genderPersonForm\"\n            onChange={handleChangeText}\n            value={formState.state.gender}\n            aria-label=\"gender\"\n            name=\"gender\"\n            defaultValue=\"top\"\n          >\n            <FormControlLabel\n              value=\"Женский\"\n              control={<Radio id=\"femalePersonForm\" color=\"primary\" />}\n              label=\"Женский\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"Мужской\"\n              control={<Radio id=\"malePersonForm\" color=\"primary\" />}\n              label=\"Мужской\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n          <FormHelperText>{genderMsg}</FormHelperText>\n        </FormControl>\n      </div>\n      <div className={classes.inputGroup}>\n        <TextField\n          className={classes.textInput}\n          value={formState.state.dateOfHiring}\n          error={Boolean(dateOfHiringMsg)}\n          helperText={dateOfHiringMsg}\n          InputLabelProps={{ shrink: true }}\n          onChange={handleChangeText}\n          required\n          id=\"dateOfHiringPersonForm\"\n          name=\"dateOfHiring\"\n          label=\"Дата приема на работу\"\n          type=\"date\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.textInput}\n          value={formState.state.dateOfFiring}\n          error={Boolean(dateOfFiringMsg)}\n          helperText={dateOfFiringMsg}\n          InputLabelProps={{ shrink: true }}\n          onChange={handleChangeText}\n          id=\"dateOfFiringPersonForm\"\n          name=\"dateOfFiring\"\n          label=\"Дата увольнения\"\n          type=\"date\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <FormControl>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={formState.state.isDriver}\n                onChange={handleChangeCheck}\n                id=\"isDriverPersonForm\"\n                name=\"isDriver\"\n              />\n            }\n            label=\"Наличие водительских прав\"\n          />\n        </FormControl>\n        {/* <FormControl >\n          <InputLabel shrink htmlFor=\"select-multiple-native\">\n            Должность\n          </InputLabel>\n          <Select\n            className={classes.textInput}\n            required\n            native\n            multiple\n            inputProps={{\n              id: 'select-multiple-native',\n            }}\n            label=\"\"\n            variant=\"outlined\"\n          >\n            {colleagues}\n          </Select>\n        </FormControl> */}\n      </div>\n    </form>\n  );\n});\n","import formState from \"./../store/formState\";\nimport list from \"./../store/list\";\nimport formValidation from \"./../store/formValidation\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PersonForm from \"./../PersonForm/PersonForm\";\n\nexport default function AddPerson(props) {\n  const onSubmit = () => {\n    formValidation.resetFieldValidStatus();\n\n    formValidation.validateForm(formState.state);\n    if (formValidation.isValid) {\n      list.addPerson(formState.state);\n      formState.resetForm();\n      props.handleClose();\n    }\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"md\"\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <PersonForm />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          Отмена\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Добавить сотрудника\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PersonAddSharpIcon from \"@material-ui/icons/PersonAddSharp\";\nimport AddPersonDialog from \"./AddPersonDialog\";\n\nexport default function AddPersonBtn(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Добавить сотрудника\">\n        <IconButton aria-label=\"Добавить сотрудника\" onClick={handleOpen}>\n          <PersonAddSharpIcon color=\"secondary\" fontSize=\"large\" />\n        </IconButton>\n      </Tooltip>\n      <AddPersonDialog\n        open={open}\n        title=\"Добавить сотрудника\"\n        handleClose={handleClose}\n      />\n    </div>\n  );\n}\n","import TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  tableHeader: {\n    backgroundColor: \"black\",\n  },\n  tableHeaderCell: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default function StaffListHeader(props) {\n  const classes = useStyles();\n\n  const headers = Object.values(props.staffKeys).map((header) => (\n    <TableCell className={classes.tableHeaderCell} key={header}>\n      {header}\n    </TableCell>\n  ));\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHeader}>{headers}</TableRow>\n    </TableHead>\n  );\n}\n","import formState from \"../store/formState\";\nimport formValidation from \"./../store/formValidation\";\nimport list from \"../store/list\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PersonForm from \"../PersonForm/PersonForm\";\n\nexport default function EditPersonDialog(props) {\n  const onSubmit = () => {\n    formValidation.resetFieldValidStatus();\n\n    formValidation.validateForm(formState.state);\n    if (formValidation.isValid) {\n      list.editPerson(props.id, formState.state);\n      formState.resetForm();\n      props.handleClose();\n    }\n  };\n\n  const onClose = () => {\n    formValidation.resetFieldValidStatus();\n    formState.resetForm();\n    props.handleClose();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"md\"\n      open={props.open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <PersonForm />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Отмена\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Отредактировать данные\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport EditPersonDialog from \"./EditPersonDialog\";\nimport formState from \"../store/formState\";\nimport list from \"../store/list\";\n\nexport default function EditPersonBtn(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const person = list.list[props.id];\n\n  return (\n    <div>\n      <Tooltip title=\"Отредактировать запись\">\n        <IconButton\n          aria-label=\"Отредактировать запись\"\n          onClick={() => {\n            formState.editState(person);\n            handleOpen();\n          }}\n        >\n          <EditIcon color=\"secondary\" />\n        </IconButton>\n      </Tooltip>\n      <EditPersonDialog\n        open={open}\n        handleClose={handleClose}\n        title=\"Отредактировать\"\n        id={props.id}\n      />\n    </div>\n  );\n}\n","import list from \"../store/list\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function DeletePersonDialog(props) {\n  const onSubmit = () => {\n    list.deletePerson(props.id);\n    props.handleClose();\n  };\n\n  const onClose = () => {\n    props.handleClose();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"md\"\n      open={props.open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Отмена\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Удалить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeletePersonDialog from \"./DeletePersonDialog\";\n\nexport default function DeletePersonBtn(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Удалить сотрудника\">\n        <IconButton\n          aria-label=\"Удалить сотрудника\"\n          onClick={() => {\n            handleOpen();\n          }}\n        >\n          <DeleteIcon color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n      <DeletePersonDialog\n        open={open}\n        handleClose={handleClose}\n        title=\"Удалить сотрудника?\"\n        id={props.id}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport EditPersonBtn from \"./../EditPerson/EditPersonBtn\";\nimport DeletePersonBtn from \"./../DeletePerson/DeletePersonBtn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  flex: {\n    display: \"flex\",\n  },\n});\n\nexport default function StaffListControls(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.flex}>\n      <EditPersonBtn id={props.id} />\n      <DeletePersonBtn id={props.id} />\n    </div>\n  );\n}\n","import TableCell from \"@material-ui/core/TableCell\";\nimport StaffListControls from \"./StaffListControls\";\n\nexport default function StaffListCell(props) {\n  const { columnHeader, cellValue } = props;\n\n  function dataHandler(columnHeader, cellValue) {\n    if (columnHeader === \"isDriver\") {\n      return cellValue ? \"Есть права\" : \"Права отсутствуют\";\n    }\n    if (columnHeader === \"dateOfFiring\" && cellValue === \"\") {\n      return \"Трудоустроен\";\n    }\n    if (\n      columnHeader === \"dateOfBirth\" ||\n      columnHeader === \"dateOfHiring\" ||\n      columnHeader === \"dateOfFiring\"\n    ) {\n      return cellValue.split(\"-\").reverse().join(\".\");\n    }\n    if (columnHeader === \"controls\") {\n      return <StaffListControls id={props.id} />;\n    }\n    return cellValue;\n  }\n\n  const cellContent = dataHandler(columnHeader, cellValue);\n\n  return <TableCell>{cellContent}</TableCell>;\n}\n","import TableRow from \"@material-ui/core/TableRow\";\nimport StaffListCell from \"./StaffListCell\";\n\nexport default function StaffListRow(props) {\n  const row = Object.keys(props.staffKeys).map((key) => (\n    <StaffListCell\n      key={props.id + props.person[key] + Math.random()}\n      staffList={props.staffList}\n      columnHeader={key}\n      cellValue={props.person[key]}\n      id={props.id}\n    />\n  ));\n\n  return <TableRow>{row}</TableRow>;\n}\n","import list from \"../store/list\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport StaffListHeader from \"./StaffListHeader\";\nimport StaffListRow from \"./StaffListRow\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    margin: \"30px auto\",\n  },\n});\n\nexport default observer(function StaffList(props) {\n  const classes = useStyles();\n\n  const rows = Object.entries(list.list).map(([id, person]) => {\n    return (\n      <StaffListRow\n        key={id + person.surname}\n        staffKeys={list.keys}\n        staffList={list.list}\n        id={id}\n        person={person}\n      />\n    );\n  });\n\n  return (\n    <TableContainer className={classes.tableContainer} component={Paper}>\n      <Table>\n        <StaffListHeader staffKeys={list.keys} />\n        <TableBody>{rows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n});\n","import list from \"./store/list\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddPersonBtn from \"./AddPerson/AddPersonBtn\";\nimport StaffList from \"./StaffList/StaffList\";\n\nconst localStorageMockup = () => {\n  localStorage.setItem(\"staffListTestWork\", JSON.stringify(list.list));\n  list.getLocalStorage();\n};\n\nif (!localStorage.getItem(\"staffListTestWork\")) {\n  localStorageMockup();\n} else {\n  list.getLocalStorage();\n}\n\nconst useStyles = makeStyles({\n  container: {\n    textAlign: \"center\",\n  },\n});\n\nexport default function App(props) {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth={false} className={classes.container}>\n        <Typography variant=\"h2\" component=\"h2\">\n          Реестр сотрудников\n        </Typography>\n        <StaffList />\n        <AddPersonBtn />\n      </Container>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}